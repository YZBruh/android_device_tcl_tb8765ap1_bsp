on post-fs
        mkdir /mnt/vendor 0700 root root
	mkdir /mnt/vendor/protect_f 0777 root root
	mkdir /mnt/vendor/protect_s 0777 root root
	mkdir /mnt/vendor/nvdata 0777 root root
	mkdir /mnt/vendor/nvcfg 0777 root root
        mkdir /mnt/vendor/persist 0777 root root
	mount ext4 /dev/block/by-name/protect1 /mnt/vendor/protect_f rw wait
	mount ext4 /dev/block/by-name/protect2 /mnt/vendor/protect_s rw wait
	mount ext4 /dev/block/by-name/nvdata /mnt/vendor/nvdata rw wait
	mount ext4 /dev/block/by-name/nvcfg /mnt/vendor/nvcfg rw wait
        mount ext4 /dev/block/by-name/persist /mnt/vendor/persist rw wait
	symlink /mnt/vendor/protect_f /vendor/protect_f
	symlink /mnt/vendor/protect_s /vendor/protect_s
	symlink /mnt/vendor/nvcfg /vendor/nvcfg
	symlink /mnt/vendor/nvdata /vendor/nvdata
        symlink /mnt/vendor/persist /vendor/persist

	write /proc/bootprof "tkcore: prepare system ta path"
        chown system system /vendor/app/t6

	write /proc/bootprof "tkcore: prepare persist sfs"
        restorecon /mnt/vendor/persist
        mkdir /mnt/vendor/persist/t6
        chown system system /mnt/vendor/persist/t6
        restorecon /mnt/vendor/persist/t6
	setprop vendor.trustkernel.fs.mode 2
	setprop vendor.trustkernel.fs.state ready

on property:vendor.trustkernel.fs.state=ready
	write /proc/bootprof "tkcore: prepare basic"
        mkdir /data/vendor
	mkdir /data/vendor/t6
        chown system system /data/vendor/t6
        restorecon /data/vendor/t6

	write /proc/bootprof "tkcore: prepare sfs"
	mkdir /data/vendor/t6/fs
        chown system system /data/vendor/t6/fs
        restorecon /data/vendor/t6/fs

	write /proc/bootprof "tkcore: prepare service provider ta path"
	mkdir /data/vendor/t6/app
        chown system system /data/vendor/t6/app
        restorecon /data/vendor/t6/app

# For non-encrypted case
on property:ro.crypto.state=unencrypted
	setprop vendor.trustkernel.fs.mode 1
	setprop vendor.trustkernel.fs.state ready

# For FDE/encrypted successfully
on property:vold.decrypt=trigger_restart_framework
	setprop vendor.trustkernel.fs.mode 2
	setprop vendor.trustkernel.fs.state ready

# For FBE/encrypted successfully
on property:ro.crypto.type=file && property:ro.crypto.state=encrypted
	setprop vendor.trustkernel.fs.mode 3
	setprop vendor.trustkernel.fs.state ready

on property:vendor.trustkernel.log.state=ready
	write /proc/bootprof "tkcore: prepare log file"
	restorecon /data/vendor/t6/tkcore.log
	setprop vendor.trustkernel.log.state enable
